package com.neuedu.dao;

import com.neuedu.pojo.Cart;
import com.neuedu.pojo.Product;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface CartMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbg.generated
     */
    int insert(Cart record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbg.generated
     */
    Cart selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbg.generated
     */
    List<Cart> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(Cart record);
    /**
     * 根据商品id和用户id来查询购物车信息
     * */
    Cart findCartByUidAndPid(@Param("userId")Integer userId,@Param("productId")Integer productId);

    /**
     * 查询用户的购物车信息
     * */
    List<Cart> findCarstByUserid(@Param("userId") Integer userId);
    /**
     * 统计购物车中未选中的商品数量
     * */
    Integer isAllChecked(@Param("userId")Integer userId);
    /**
     * 查看用户购物车中已勾选的商品
     * */
    List<Cart> findCartByUseridAndChecked(@Param("userId")Integer userId);
    /**
     * 清空购物车中已选中的商品
     * */
    int deleteBatch(@Param("cartList") List<Cart> cartList);
    /**
     * 更新购物车某个产品的数量
     * */
    int updateCount(@Param("userId") Integer userId,@Param("productId") Integer productId,@Param("count") Integer count);
    /**
     * 移除购物车某个产品
     * */
    int deleteProduct(@Param("userId")Integer userId,@Param("productList") List<Integer> productList);
    /**
     * 购物车取消选中的某个产品
     * */
    int un_select(@Param("userId") Integer userId,@Param("productId") Integer productId);
    /**
     * 购物车选中的某个产品
     * */
    int select(@Param("userId") Integer userId,@Param("productId") Integer productId);
}